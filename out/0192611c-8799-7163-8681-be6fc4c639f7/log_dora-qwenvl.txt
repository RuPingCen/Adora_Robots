Unrecognized keys in `rope_scaling` for 'rope_type'='default': {'mrope_section'}
`Qwen2VLRotaryEmbedding` can now be fully parameterized by passing the model config through the `config` argument. All other arguments will be removed in v4.46
/home/crp/anaconda3/lib/python3.11/site-packages/accelerate/utils/modeling.py:1405: UserWarning: Current model requires 3752 bytes of buffer for offloaded layers, which seems does not fit any GPU's remaining memory. If you are experiencing a OOM later, please consider using offload_buffers=True.
  warnings.warn(
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 2/2 [00:00<00:00, 12.52it/s]Loading checkpoint shards: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 2/2 [00:00<00:00, 12.51it/s]
/home/crp/anaconda3/lib/python3.11/site-packages/accelerate/utils/modeling.py:1405: UserWarning: Current model requires 7504 bytes of buffer for offloaded layers, which seems does not fit any GPU's remaining memory. If you are experiencing a OOM later, please consider using offload_buffers=True.
  warnings.warn(
Traceback (most recent call last):
  File "/home/crp/anaconda3/bin/dora-qwenvl", line 8, in <module>
    sys.exit(main())
             ^^^^^^
  File "/home/crp/anaconda3/lib/python3.11/site-packages/dora_qwenvl/main.py", line 132, in main
    response = generate(frames, question)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/crp/anaconda3/lib/python3.11/site-packages/dora_qwenvl/main.py", line 71, in generate
    inputs = inputs.to("cuda")
             ^^^^^^^^^^^^^^^^^
  File "/home/crp/anaconda3/lib/python3.11/site-packages/transformers/feature_extraction_utils.py", line 242, in to
    new_data[k] = v.to(*args, **kwargs)
                  ^^^^^^^^^^^^^^^^^^^^^
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 16.00 MiB. GPU 0 has a total capacity of 5.77 GiB of which 11.81 MiB is free. Process 49517 has 73.21 MiB memory in use. Process 50074 has 5.55 GiB memory in use. Including non-PyTorch memory, this process has 82.00 MiB memory in use. Of the allocated memory 13.00 KiB is allocated by PyTorch, and 1.99 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
[2m2024-10-06T09:15:43.150744Z[0m [33m WARN[0m [2mdora_node_api::event_stream::thread[0m[2m:[0m timeout while waiting for event stream thread
